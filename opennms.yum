#!/bin/sh
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, either version 3 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

set -e

if [ ! -f /etc/opennms.mirror.conf ]; then
    echo "Configuration file /etc/opennms.mirror.conf not found."
    exit 2
fi

. /etc/opennms.mirror.conf

LOGFILE="${LOGDIR}/opennms.yum.log"

# Log all activity to file.
exec >> ${LOGFILE} 2>&1

if [ -z "${OPENNMS_YUM_DIR}" ]; then
    echo -n "No OpenNMS Yum target directory (OPENNMS_YUM_DIR) set in "
    echo "/etc/opennms.mirror.conf."
    exit 2
fi

LOCK="${OPENNMS_YUM_DIR}/Archive-Update-in-Progress-${HOSTNAME}"

trap 'rm -f $LOCK > /dev/null 2>&1; savelog -c 28 -n $LOGFILE > /dev/null' EXIT

# Get in the right directory and set the umask
cd ${HOME}
umask 022

echo "$(date -R): Initiating OpenNMS Yum mirror operations..."

# Check to see if another sync is in progress
if ! ( set -o noclobber; echo "$$" > "${LOCK}") 2> /dev/null; then
    if ! $(kill -0 $(cat ${LOCK}) 2>/dev/null); then
        # Process does either not exist or is not owned by us.
        echo "$$" > "${LOCK}"
    else
        echo "$(date -R): Unable to proceed with operations; lock file still exists for PID $(cat ${LOCK})."
        exit 1
    fi
fi

echo "$(date -R): Lock established for process $(cat $LOCK)."

set +e
echo "$(date -R): Initiating OpenNMS Yum pool sync..."

rsync -av --partial --delete --delete-after \
      --timeout=${IO_TIMEOUT} \
      --bwlimit=${SPEED} \
      --exclude "dists/" \
      --exclude "Archive-Update-in-Progress-${HOSTNAME}" \
      ${OPENNMS_YUM_EXCLUDE} \
      ${OPENNMS_YUM_MIRROR} ${OPENNMS_YUM_DIR}

if [ $? -ne 0 ]; then
    ( echo "OpenNMS Yum pool sync failed. Please check logs."; \
        egrep '^write failed|@ERROR' $LOGFILE ) | mail -s "OpenNMS Yum pool sync failed" ${EMAIL}
    echo "$(date -R): OpenNMS Yum pool sync failed."
    exit 1
fi

echo "$(date -R): OpenNMS Yum pool sync completed."

echo "$(date -R): Initiating OpenNMS Yum dists sync..."

rsync -av --partial --delete --delete-after \
      --timeout=${IO_TIMEOUT}  \
      --bwlimit=${SPEED} \
      --exclude "Archive-Update-in-Progress-${HOSTNAME}" \
      ${OPENNMS_YUM_EXCLUDE} \
      ${OPENNMS_YUM_MIRROR} ${OPENNMS_YUM_DIR}

if [ $? -ne 0 ]; then
    ( echo "OpenNMS Yum dists sync failed. Please check logs."; \
        grep '@ERROR' ${LOGFILE} ) | mail -s "OpenNMS Yum dists sync failed" ${EMAIL}
    echo "$(date -R): OpenNMS Yum dists sync failed."
    exit 2
fi

echo "$(date -R): OpenNMS Yum dists sync completed."

echo "$(date -R): Removing soft-links from mirror..."
find ${OPENNMS_YUM_DIR} -type l -xtype l | xargs -r rm

echo "$(date -R): Releasing lock file..."
rm -f ${LOCK} > /dev/null 2>&1

echo "$(date -R): Time-stamping trace file..."
date -u > "${OPENNMS_YUM_DIR}/${HOSTNAME}"

echo "$(date -R): OpenNMS Yum mirror operations completed."
